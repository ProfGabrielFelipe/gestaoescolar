import streamlit as st
import pandas as pd
from io import BytesIO

# FunÃ§Ã£o para salvar dados em um arquivo XLSX
def salvar_dados_completos(alunos):
    dados = []
    for aluno in alunos:
        for disciplina, notas in aluno["Notas"].items():
            dados.append({
                "Nome": aluno["Nome"],
                "RA": aluno["RA"],
                "Turma": aluno["Turma"],
                "Disciplina": disciplina,
                "Notas": ", ".join(map(str, notas)),
                "MÃ©dia": sum(notas) / len(notas) if notas else 0,
                "Parecer Descritivo": aluno.get("Parecer Descritivo", ""),
                "Status": aluno.get("Status", ""),
                "Bimestre": aluno.get("Bimestre", ""),
            })
    df = pd.DataFrame(dados)
    output = BytesIO()
    df.to_excel(output, index=False, engine="openpyxl")
    output.seek(0)
    return output

# ConfiguraÃ§Ã£o inicial do Streamlit
st.set_page_config(page_title="GestÃ£o Escolar", layout="wide")

# TÃ­tulo principal do aplicativo
st.title("Sistema de GestÃ£o Escolar ğŸ“š")

# Menu de navegaÃ§Ã£o
menu = st.sidebar.radio("NavegaÃ§Ã£o", ["Cadastro de Alunos", "MÃ©dias por Disciplina", "Conselho de Classe", "Importar Turmas"])

# Lista inicial de alunos (simulaÃ§Ã£o de banco de dados)
if "alunos" not in st.session_state:
    st.session_state["alunos"] = []

# Disciplinas por turma
disciplinas = {
    # Ensino Fundamental II
    "6Âº A": ["PortuguÃªs", "InglÃªs", "Arte", "EducaÃ§Ã£o FÃ­sica", "MatemÃ¡tica", "CiÃªncias", "Geografia", "HistÃ³ria", "Projeto de Vida", "Tecnologia", "EducaÃ§Ã£o Financeira", "RedaÃ§Ã£o e Leitura"],
    "6Âº B": ["PortuguÃªs", "InglÃªs", "Arte", "EducaÃ§Ã£o FÃ­sica", "MatemÃ¡tica", "CiÃªncias", "Geografia", "HistÃ³ria", "Projeto de Vida", "Tecnologia", "EducaÃ§Ã£o Financeira", "RedaÃ§Ã£o e Leitura"],
    "6Âº C": ["PortuguÃªs", "InglÃªs", "Arte", "EducaÃ§Ã£o FÃ­sica", "MatemÃ¡tica", "CiÃªncias", "Geografia", "HistÃ³ria", "Projeto de Vida", "Tecnologia", "EducaÃ§Ã£o Financeira", "RedaÃ§Ã£o e Leitura"],
    "7Âº A": ["PortuguÃªs", "InglÃªs", "Arte", "EducaÃ§Ã£o FÃ­sica", "MatemÃ¡tica", "CiÃªncias", "Geografia", "HistÃ³ria", "Projeto de Vida", "Tecnologia", "EducaÃ§Ã£o Financeira", "RedaÃ§Ã£o e Leitura"],
    "7Âº B": ["PortuguÃªs", "InglÃªs", "Arte", "EducaÃ§Ã£o FÃ­sica", "MatemÃ¡tica", "CiÃªncias", "Geografia", "HistÃ³ria", "Projeto de Vida", "Tecnologia", "EducaÃ§Ã£o Financeira", "RedaÃ§Ã£o e Leitura"],
    "8Âº A": ["PortuguÃªs", "InglÃªs", "Arte", "EducaÃ§Ã£o FÃ­sica", "MatemÃ¡tica", "CiÃªncias", "Geografia", "HistÃ³ria", "Projeto de Vida", "Tecnologia", "EducaÃ§Ã£o Financeira", "RedaÃ§Ã£o e Leitura"],
    "8Âº B": ["PortuguÃªs", "InglÃªs", "Arte", "EducaÃ§Ã£o FÃ­sica", "MatemÃ¡tica", "CiÃªncias", "Geografia", "HistÃ³ria", "Projeto de Vida", "Tecnologia", "EducaÃ§Ã£o Financeira", "RedaÃ§Ã£o e Leitura"],
    "9Âº A": ["PortuguÃªs", "InglÃªs", "Arte", "EducaÃ§Ã£o FÃ­sica", "MatemÃ¡tica", "CiÃªncias", "Geografia", "HistÃ³ria", "Projeto de Vida", "OrientaÃ§Ã£o de Estudos de MatemÃ¡tica", "OrientaÃ§Ã£o de Estudos de PortuguÃªs", "RedaÃ§Ã£o e Leitura"],
    "9Âº B": ["PortuguÃªs", "InglÃªs", "Arte", "EducaÃ§Ã£o FÃ­sica", "MatemÃ¡tica", "CiÃªncias", "Geografia", "HistÃ³ria", "Projeto de Vida", "OrientaÃ§Ã£o de Estudos de MatemÃ¡tica", "OrientaÃ§Ã£o de Estudos de PortuguÃªs", "RedaÃ§Ã£o e Leitura"],
    "9Âº C": ["PortuguÃªs", "InglÃªs", "Arte", "EducaÃ§Ã£o FÃ­sica", "MatemÃ¡tica", "CiÃªncias", "Geografia", "HistÃ³ria", "Projeto de Vida", "OrientaÃ§Ã£o de Estudos de MatemÃ¡tica", "OrientaÃ§Ã£o de Estudos de PortuguÃªs", "RedaÃ§Ã£o e Leitura"],
    # Ensino MÃ©dio
    "1Âª SÃ©rie A": ["PortuguÃªs", "RedaÃ§Ã£o e Leitura", "InglÃªs", "Artes", "EducaÃ§Ã£o FÃ­sica", "MatemÃ¡tica", "EducaÃ§Ã£o Financeira", "Biologia", "FÃ­sica", "QuÃ­mica", "Filosofia", "Geografia", "HistÃ³ria"],
    "1Âª SÃ©rie B": ["PortuguÃªs", "RedaÃ§Ã£o e Leitura", "InglÃªs", "Artes", "EducaÃ§Ã£o FÃ­sica", "MatemÃ¡tica", "EducaÃ§Ã£o Financeira", "Biologia", "FÃ­sica", "QuÃ­mica", "Filosofia", "Geografia", "HistÃ³ria"],
    "1Âª SÃ©rie C": ["PortuguÃªs", "RedaÃ§Ã£o e Leitura", "InglÃªs", "Artes", "EducaÃ§Ã£o FÃ­sica", "MatemÃ¡tica", "EducaÃ§Ã£o Financeira", "Biologia", "FÃ­sica", "QuÃ­mica", "Filosofia", "Geografia", "HistÃ³ria"],
    "1Âª SÃ©rie D": ["PortuguÃªs", "RedaÃ§Ã£o e Leitura", "InglÃªs", "Artes", "EducaÃ§Ã£o FÃ­sica", "MatemÃ¡tica", "EducaÃ§Ã£o Financeira", "Biologia", "FÃ­sica", "QuÃ­mica", "Filosofia", "Geografia", "HistÃ³ria"],
    "2Âª SÃ©rie A": ["PortuguÃªs", "RedaÃ§Ã£o e Leitura", "InglÃªs", "EducaÃ§Ã£o Financeira", "Empreendedorismo", "ProgramaÃ§Ã£o", "EducaÃ§Ã£o FÃ­sica", "MatemÃ¡tica", "Biologia", "FÃ­sica", "QuÃ­mica", "Geografia", "HistÃ³ria", "Sociologia"],
    "2Âª SÃ©rie B": ["LideranÃ§a", "OratÃ³ria", "Sociologia", "HistÃ³ria", "Geografia", "QuÃ­mica", "FÃ­sica", "Biologia", "EducaÃ§Ã£o Financeira", "MatemÃ¡tica", "EducaÃ§Ã£o FÃ­sica", "InglÃªs", "RedaÃ§Ã£o e Leitura", "PortuguÃªs"],
    "2Âª SÃ©rie C": ["LideranÃ§a", "OratÃ³ria", "Sociologia", "HistÃ³ria", "Geografia", "QuÃ­mica", "FÃ­sica", "Biologia", "EducaÃ§Ã£o Financeira", "MatemÃ¡tica", "EducaÃ§Ã£o FÃ­sica", "InglÃªs", "RedaÃ§Ã£o e Leitura", "PortuguÃªs"],
    "3Âª SÃ©rie A": ["Empreendedorismo", "ProgramaÃ§Ã£o", "Biotecnologia", "QuÃ­mica Aplicada", "HistÃ³ria", "FÃ­sica", "MatemÃ¡tica", "EducaÃ§Ã£o FÃ­sica", "InglÃªs", "RedaÃ§Ã£o e Leitura", "PortuguÃªs", "OrientaÃ§Ã£o de Estudos MatemÃ¡tica", "OrientaÃ§Ã£o de Estudos PortuguÃªs"],
    "3Âª SÃ©rie B": ["OratÃ³ria", "GeopolÃ­tica", "Filosofia e Sociedade Moderna", "Arte e MÃ­dias Digitais", "HistÃ³ria", "FÃ­sica", "MatemÃ¡tica", "EducaÃ§Ã£o FÃ­sica", "InglÃªs", "RedaÃ§Ã£o e Leitura", "PortuguÃªs", "OrientaÃ§Ã£o de Estudos MatemÃ¡tica", "OrientaÃ§Ã£o de Estudos PortuguÃªs"],
    "3Âª SÃ©rie C": ["OratÃ³ria", "GeopolÃ­tica", "Filosofia e Sociedade Moderna", "Arte e MÃ­dias Digitais", "HistÃ³ria", "FÃ­sica", "MatemÃ¡tica", "EducaÃ§Ã£o FÃ­sica", "InglÃªs", "RedaÃ§Ã£o e Leitura", "PortuguÃªs", "OrientaÃ§Ã£o de Estudos MatemÃ¡tica", "OrientaÃ§Ã£o de Estudos PortuguÃªs"],
}

# PÃ¡gina de ImportaÃ§Ã£o de Turmas
if menu == "Importar Turmas":
    st.header("Importar Turmas via Planilha XLSX")

    # InstruÃ§Ãµes para o usuÃ¡rio
    st.markdown("""
    **InstruÃ§Ãµes para importar turmas:**
    - A planilha deve estar no formato `.xlsx`.
    - As colunas obrigatÃ³rias sÃ£o: **Nome**, **RA**, **Data de Nascimento**, **Turma**, **SituaÃ§Ã£o**, **ComentÃ¡rios**.
    - Certifique-se de que os dados estejam corretos antes de importar.
    """)

    # Upload da planilha
    arquivo = st.file_uploader("Envie a planilha XLSX", type=["xlsx"])

    if arquivo:
        try:
            # LÃª a planilha enviada
            df_importado = pd.read_excel(arquivo)

            # Valida se as colunas obrigatÃ³rias estÃ£o presentes
            colunas_obrigatorias = ["Nome", "RA", "Data de Nascimento", "Turma", "SituaÃ§Ã£o", "ComentÃ¡rios"]
            if all(coluna in df_importado.columns for coluna in colunas_obrigatorias):
                # Adiciona os alunos importados Ã  lista existente
                novos_alunos = df_importado.to_dict(orient="records")
                for aluno in novos_alunos:
                    turma = aluno["Turma"]
                    if turma in disciplinas:
                        aluno["Notas"] = {disciplina: [] for disciplina in disciplinas[turma]}
                        aluno["Parecer Descritivo"] = ""
                        aluno["Status"] = ""
                        aluno["Bimestre"] = ""
                        st.session_state["alunos"].append(aluno)
                st.success(f"{len(novos_alunos)} alunos importados com sucesso!")
            else:
                st.error("A planilha enviada nÃ£o contÃ©m todas as colunas obrigatÃ³rias.")
        except Exception as e:
            st.error(f"Erro ao processar a planilha: {e}")

    # Exibe a lista atualizada de alunos
    if st.session_state["alunos"]:
        st.subheader("Lista Atualizada de Alunos")
        df_alunos = pd.DataFrame(st.session_state["alunos"])
        st.dataframe(df_alunos)

# Outras pÃ¡ginas continuam aqui...